--- thunderhub/Dockerfile	2022-04-20 12:52:38.319638554 -0600
+++ Dockerfile.temp	2022-05-03 16:55:17.145387682 -0600
@@ -1,19 +1,23 @@
+FROM arm64v8/golang:1.18-alpine3.15 as yqbuild
+ENV GO111MODULE=on
+RUN apk add git
+RUN go install github.com/mikefarah/yq/v4@v4.24.5
+
 # ---------------
 # Install Dependencies
 # ---------------
-FROM node:16.15.1-alpine as deps
+FROM arm64v8/node:16.15.1-alpine as deps
 
 WORKDIR /app
 
 # Install dependencies neccesary for node-gyp on node alpine
 RUN apk add --update --no-cache \
   libc6-compat \
   python3 \
   make \
   g++
 
-# Install app dependencies
-COPY package.json package-lock.json ./
+COPY ./thunderhub/package.json ./thunderhub/package-lock.json ./
 RUN npm ci
 
 # ---------------
@@ -31,9 +35,8 @@
 ENV NEXT_TELEMETRY_DISABLED=1
 
 # Build the NestJS and NextJS application
-COPY . .
-RUN npm run build:nest
-RUN npm run build:next
+COPY ./thunderhub/ ./
+RUN npm run build
 
 # Remove non production necessary modules
 RUN npm prune --production
@@ -41,7 +46,8 @@
 # ---------------
 # Release App
 # ---------------
-FROM node:16.15.1-alpine as final
+FROM arm64v8/node:16.15.1-alpine as final
+RUN apk add --update --no-cache bash coreutils curl
 
 WORKDIR /app
 
@@ -65,4 +69,8 @@
 
 EXPOSE 3000
 
-CMD [ "npm", "run", "start:prod" ]
+COPY ./docker_entrypoint.sh /usr/local/bin/docker_entrypoint.sh
+COPY ./check-web.sh /usr/local/bin/check-web.sh
+RUN chmod a+x /usr/local/bin/check-web.sh
+COPY --from=yqbuild /go/bin/yq /usr/bin/yq
+ENTRYPOINT ["/usr/local/bin/docker_entrypoint.sh"]
